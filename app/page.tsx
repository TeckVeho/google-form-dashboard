"use client"

import type React from "react"

import { useState } from "react"
import { useRouter } from "next/navigation"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Upload, FileSpreadsheet, BarChart3, Users, TrendingUp, CheckCircle, AlertCircle } from "lucide-react"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { RequireAuth } from "@/components/auth-guard"
import { useAuth } from "@/lib/auth/auth-context"
import { Progress } from "@/components/ui/progress"

function HomePage() {
  const [file, setFile] = useState<File | null>(null)
  const [uploading, setUploading] = useState(false)
  const [uploadProgress, setUploadProgress] = useState(0)
  const [selectedYear, setSelectedYear] = useState("2024Âπ¥")
  const [uploadError, setUploadError] = useState<string | null>(null)
  const [uploadSuccess, setUploadSuccess] = useState<string | null>(null)

  const router = useRouter()
  const { user } = useAuth()

  // Âπ¥Â∫¶ÈÅ∏Êäû„ÅÆ„Ç™„Éó„Ç∑„Éß„É≥
  const availableYears = ["2022Âπ¥", "2023Âπ¥", "2024Âπ¥", "2025Âπ¥"]

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFile(e.target.files[0])
    }
  }

  const handleAuthCheck = async () => {
    try {
      const response = await fetch('/api/auth-status')
      const result = await response.json()

      console.log('üîç Ë™çË®ºÁä∂ÊÖã„ÉÅ„Çß„ÉÉ„ÇØÁµêÊûú:', result)
      setUploadSuccess(`Ë™çË®ºÁä∂ÊÖã: ${JSON.stringify(result, null, 2)}`)

    } catch (error) {
      console.error('Auth check error:', error)
      setUploadError(error instanceof Error ? error.message : 'Ë™çË®ºÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    }
  }

  const handleSupabaseDebug = async () => {
    try {
      setUploadError(null)
      setUploadSuccess('SupabaseË®∫Êñ≠„ÇíÂÆüË°å‰∏≠...')

      const response = await fetch('/api/supabase-debug')
      const result = await response.json()

      console.log('üîç SupabaseË©≥Á¥∞Ë®∫Êñ≠ÁµêÊûú:', result)

      // ÁµêÊûú„Çí„Çà„ÇäË™≠„Åø„ÇÑ„Åô„ÅÑÂΩ¢Âºè„ÅßË°®Á§∫
      let message = '=== SupabaseË©≥Á¥∞Ë®∫Êñ≠ÁµêÊûú ===\n\n'

      if (result.success) {
        message += '‚úÖ Áí∞Â¢ÉË®≠ÂÆö:\n'
        message += `  - URLË®≠ÂÆö: ${result.environment.hasUrl ? '‚úì' : '‚úó'}\n`
        message += `  - API„Ç≠„ÉºË®≠ÂÆö: ${result.environment.hasKey ? '‚úì' : '‚úó'}\n`
        message += `  - URLÂΩ¢Âºè: ${result.environment.urlFormat ? '‚úì' : '‚úó'}\n`
        message += `  - „Ç≠„ÉºÂΩ¢Âºè: ${result.environment.keyFormat ? '‚úì' : '‚úó'}\n\n`

        message += 'üîó Êé•Á∂öÁä∂Ê≥Å:\n'
        message += `  - „Éá„Éº„Çø„Éô„Éº„Çπ: ${result.connection.database.connected ? '‚úì Êé•Á∂öOK' : '‚úó Êé•Á∂öNG'}\n`
        message += `  - „Çπ„Éà„É¨„Éº„Ç∏: ${result.connection.storage.connected ? '‚úì Êé•Á∂öOK' : '‚úó Êé•Á∂öNG'}\n`
        message += `  - „Çª„ÉÉ„Ç∑„Éß„É≥: ${result.connection.session.exists ? '‚úì Â≠òÂú®' : '‚úó „Å™„Åó'}\n`
        message += `  - „É¶„Éº„Ç∂„Éº: ${result.connection.user.exists ? '‚úì Ë™çË®ºÊ∏à„Åø' : '‚úó Êú™Ë™çË®º'}\n\n`

        if (result.connection.session.error) {
          message += `‚ùå „Çª„ÉÉ„Ç∑„Éß„É≥„Ç®„É©„Éº: ${result.connection.session.error}\n`
        }
        if (result.connection.user.error) {
          message += `‚ùå „É¶„Éº„Ç∂„Éº„Ç®„É©„Éº: ${result.connection.user.error}\n`
        }

        if (result.recommendations && result.recommendations.length > 0) {
          message += '\nüí° Êé®Â•®‰∫ãÈ†Ö:\n'
          result.recommendations.forEach((rec: string, index: number) => {
            message += `  ${index + 1}. ${rec}\n`
          })
        }
      } else {
        message += `‚ùå „Ç®„É©„Éº: ${result.error}\n`
        if (result.details) {
          message += `Ë©≥Á¥∞: ${JSON.stringify(result.details, null, 2)}\n`
        }
      }

      setUploadSuccess(message)

    } catch (error) {
      console.error('Supabase debug error:', error)
      setUploadError(error instanceof Error ? error.message : 'SupabaseË®∫Êñ≠„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    }
  }

  const handleLocalUpload = async () => {
    if (!file) return

    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)
    setUploadProgress(0)

    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('year', selectedYear)

      // „Éó„É≠„Ç∞„É¨„Çπ„ÅÆ„Ç∑„Éü„É•„É¨„Éº„Ç∑„Éß„É≥
      const progressInterval = setInterval(() => {
        setUploadProgress(prev => {
          if (prev >= 90) {
            clearInterval(progressInterval)
            return 90
          }
          return prev + 10
        })
      }, 200)

      const response = await fetch('/api/local-upload', {
        method: 'POST',
        body: formData,
      })

      clearInterval(progressInterval)
      setUploadProgress(100)

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '„É≠„Éº„Ç´„É´‰øùÂ≠òÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      }

      setUploadSuccess('„É≠„Éº„Ç´„É´‰øùÂ≠òÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å®Ëß£Êûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅÂàÜÊûêÁµêÊûú„Åå‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü„ÄÇ')

      // 3ÁßíÂæå„Å´ÁµêÊûú„ÇíË°®Á§∫
      setTimeout(() => {
        alert(`„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫Ü!\n„Éï„Ç°„Ç§„É´: ${result.data.filename}\nÂõûÁ≠îÊï∞: ${result.data.total_responses}\n„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâID: ${result.data.id}\n\nÂàÜÊûêÁµêÊûú„ÅØ tmp/uploads/ „Éï„Ç©„É´„ÉÄ„Å´‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü„ÄÇ`)
      }, 2000)

    } catch (error) {
      console.error('Local upload error:', error)
      setUploadError(error instanceof Error ? error.message : '„É≠„Éº„Ç´„É´‰øùÂ≠òÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      setUploadProgress(0)
    } finally {
      setUploading(false)
    }
  }

  const handleBypassUpload = async () => {
    if (!file) return

    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)
    setUploadProgress(0)

    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('year', selectedYear)

      // „Éó„É≠„Ç∞„É¨„Çπ„ÅÆ„Ç∑„Éü„É•„É¨„Éº„Ç∑„Éß„É≥
      const progressInterval = setInterval(() => {
        setUploadProgress(prev => {
          if (prev >= 90) {
            clearInterval(progressInterval)
            return 90
          }
          return prev + 10
        })
      }, 200)

      const response = await fetch('/api/bypass-auth-upload', {
        method: 'POST',
        body: formData,
      })

      clearInterval(progressInterval)
      setUploadProgress(100)

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || 'Ë™çË®º„Éê„Ç§„Éë„ÇπÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      }

      setUploadSuccess('Ë™çË®º„Éê„Ç§„Éë„ÇπÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å®Ëß£Êûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ')

      // 3ÁßíÂæå„Å´ÁµêÊûú„ÇíË°®Á§∫ÔºàÂÆüÈöõ„ÅÆID„ÅÆ‰ª£„Çè„Çä„Å´mock ID„Çí‰ΩøÁî®Ôºâ
      setTimeout(() => {
        alert(`„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫Ü!\n„Éï„Ç°„Ç§„É´: ${result.data.filename}\nÂõûÁ≠îÊï∞: ${result.data.total_responses}`)
      }, 2000)

    } catch (error) {
      console.error('Bypass upload error:', error)
      setUploadError(error instanceof Error ? error.message : 'Ë™çË®º„Éê„Ç§„Éë„ÇπÁâà„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      setUploadProgress(0)
    } finally {
      setUploading(false)
    }
  }

  const handleManualLogin = async () => {
    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)

    try {
      // „ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çµ„Ç§„Éâ„ÅßÁõ¥Êé•SupabaseË™çË®º„ÇíË©¶Ë°å
      const { createClient } = await import('@/lib/supabase/client')
      const supabase = createClient()

      console.log('üîê ÊâãÂãï„É≠„Ç∞„Ç§„É≥Ë©¶Ë°å: test@example.com')

      const { data, error } = await supabase.auth.signInWithPassword({
        email: 'test@example.com',
        password: 'test123456'
      })

      if (error) {
        console.error('ÊâãÂãï„É≠„Ç∞„Ç§„É≥„Ç®„É©„Éº:', error)
        throw new Error(`„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${error.message}`)
      }

      console.log('‚úÖ ÊâãÂãï„É≠„Ç∞„Ç§„É≥ÊàêÂäü:', {
        user: data.user?.id,
        session: !!data.session
      })

      setUploadSuccess(`ÊâãÂãï„É≠„Ç∞„Ç§„É≥ÊàêÂäüÔºÅ\n„É¶„Éº„Ç∂„ÉºID: ${data.user?.id}\n„É°„Éº„É´: ${data.user?.email}`)

      // Ë™çË®ºÁä∂ÊÖã„ÇíÊõ¥Êñ∞„Åô„Çã„Åü„ÇÅ„Å´„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø
      setTimeout(() => {
        window.location.reload()
      }, 2000)

    } catch (error) {
      console.error('Manual login error:', error)
      setUploadError(error instanceof Error ? error.message : 'ÊâãÂãï„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    } finally {
      setUploading(false)
    }
  }

  const handleDevLogin = async () => {
    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)

    try {
      const response = await fetch('/api/dev-login', {
        method: 'POST',
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '„ÉÜ„Çπ„Éà„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      }

      setUploadSuccess(result.message || '„ÉÜ„Çπ„Éà„É≠„Ç∞„Ç§„É≥„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü')

      // „Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶Ë™çË®ºÁä∂ÊÖã„ÇíÊõ¥Êñ∞
      setTimeout(() => {
        window.location.reload()
      }, 1000)

    } catch (error) {
      console.error('Dev login error:', error)
      setUploadError(error instanceof Error ? error.message : '„ÉÜ„Çπ„Éà„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    } finally {
      setUploading(false)
    }
  }

  const handleDebugUpload = async () => {
    if (!file || !user) return

    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)
    setUploadProgress(0)

    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('year', selectedYear)

      const response = await fetch('/api/test-upload-debug', {
        method: 'POST',
        body: formData,
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '„Éá„Éê„ÉÉ„Ç∞„ÉÅ„Çß„ÉÉ„ÇØ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      }

      console.log('üîç „Éá„Éê„ÉÉ„Ç∞ÁµêÊûú:', result)
      setUploadSuccess(`„Éá„Éê„ÉÉ„Ç∞ÂÆå‰∫Ü: ${JSON.stringify(result.debug, null, 2)}`)

    } catch (error) {
      console.error('Debug error:', error)
      setUploadError(error instanceof Error ? error.message : '„Éá„Éê„ÉÉ„Ç∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    } finally {
      setUploading(false)
      setUploadProgress(0)
    }
  }

  const handleUpload = async () => {
    if (!file || !user) return

    setUploading(true)
    setUploadError(null)
    setUploadSuccess(null)
    setUploadProgress(0)

    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('year', selectedYear)

      // „Éó„É≠„Ç∞„É¨„Çπ„ÅÆ„Ç∑„Éü„É•„É¨„Éº„Ç∑„Éß„É≥
      const progressInterval = setInterval(() => {
        setUploadProgress(prev => {
          if (prev >= 90) {
            clearInterval(progressInterval)
            return 90
          }
          return prev + 10
        })
      }, 200)

      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData,
      })

      clearInterval(progressInterval)
      setUploadProgress(100)

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
      }

      setUploadSuccess('Excel„Éï„Ç°„Ç§„É´„ÅÆ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å®Ëß£Êûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ')

      // 3ÁßíÂæå„Å´ÂàÜÊûê„Éö„Éº„Ç∏„Å´ÁßªÂãï
      setTimeout(() => {
        router.push(`/analysis?id=${result.upload.id}`)
      }, 2000)

    } catch (error) {
      console.error('Upload error:', error)
      // „Çà„ÇäË©≥Á¥∞„Å™„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫
      let errorMessage = '„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü'
      if (error instanceof Error) {
        errorMessage = error.message
      }
      console.error('Ë©≥Á¥∞„Å™„Ç®„É©„ÉºÊÉÖÂ†±:', {
        errorMessage,
        errorStack: error instanceof Error ? error.stack : undefined,
        errorType: typeof error,
        errorObject: error
      })
      setUploadError(errorMessage)
      setUploadProgress(0)
    } finally {
      setUploading(false)
    }
  }

  return (
    <div className="space-y-8">
      {/* „Éò„ÉÉ„ÉÄ„Éº„Çª„ÇØ„Ç∑„Éß„É≥ */}
      <div className="text-center space-y-4">
        <h1 className="text-4xl font-bold tracking-tight">ÂæìÊ•≠Âì°Ê∫ÄË∂≥Â∫¶Ë™øÊüª„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</h1>
        <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
          ÂæìÊ•≠Âì°Ê∫ÄË∂≥Â∫¶Ë™øÊüª„ÅÆÁµêÊûú„ÇíExcel„Åß„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„ÄÅ Áæé„Åó„ÅÑ„Ç∞„É©„Éï„Å®Áµ±Ë®à„ÅßÂàÜÊûêÁµêÊûú„ÇíÂèØË¶ñÂåñ„Åó„Åæ„Åô
        </p>
      </div>

      <div className="grid gap-8 md:grid-cols-2">
        {/* CSV„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Çª„ÇØ„Ç∑„Éß„É≥ */}
        <Card className="col-span-full md:col-span-1">
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <Upload className="h-5 w-5" />
              <span>Excel„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ</span>
            </CardTitle>
            <CardDescription>Google„Éï„Ç©„Éº„É†„Åã„Çâ„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åó„ÅüExcel„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="csv-file">Excel„Éï„Ç°„Ç§„É´„ÇíÈÅ∏Êäû</Label>
              <Input
                id="csv-file"
                type="file"
                accept=".xlsx,.xls"
                onChange={handleFileChange}
                className="cursor-pointer"
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="year-select">Ë™øÊüªÂπ¥Â∫¶</Label>
              <Select value={selectedYear} onValueChange={setSelectedYear}>
                <SelectTrigger>
                  <SelectValue placeholder="Âπ¥Â∫¶„ÇíÈÅ∏Êäû" />
                </SelectTrigger>
                <SelectContent>
                  {availableYears.map((year) => (
                    <SelectItem key={year} value={year}>
                      {year}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
            {file && (
              <Alert>
                <FileSpreadsheet className="h-4 w-4" />
                <AlertDescription>
                  ÈÅ∏Êäû„Åï„Çå„Åü„Éï„Ç°„Ç§„É´: {file.name} ({(file.size / 1024).toFixed(1)} KB)
                  <br />
                  Ë™øÊüªÂπ¥Â∫¶: {selectedYear}
                </AlertDescription>
              </Alert>
            )}

            {uploading && (
              <div className="space-y-2">
                <div className="flex items-center justify-between text-sm">
                  <span>„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ‰∏≠...</span>
                  <span>{uploadProgress}%</span>
                </div>
                <Progress value={uploadProgress} className="w-full" />
              </div>
            )}

            {uploadError && (
              <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertDescription>{uploadError}</AlertDescription>
              </Alert>
            )}

            {uploadSuccess && (
              <Alert>
                <CheckCircle className="h-4 w-4" />
                <AlertDescription>{uploadSuccess}</AlertDescription>
              </Alert>
            )}
            <div className="space-y-2">
              <Button onClick={handleUpload} disabled={!file || uploading} className="w-full">
                {uploading ? "„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ‰∏≠..." : "„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÈñãÂßã"}
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Ê©üËÉΩÁ¥π‰ªã„Çª„ÇØ„Ç∑„Éß„É≥ */}
        <Card>
          <CardHeader>
            <CardTitle>‰∏ª„Å™Ê©üËÉΩ</CardTitle>
            <CardDescription>„Åì„ÅÆ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅßÂà©Áî®„Åß„Åç„ÇãÂàÜÊûêÊ©üËÉΩ</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex items-start space-x-3">
              <BarChart3 className="h-5 w-5 text-primary mt-0.5" />
              <div>
                <h4 className="font-medium">„Ç∞„É©„ÉïÂèØË¶ñÂåñ</h4>
                <p className="text-sm text-muted-foreground">ÂæìÊ•≠Âì°Ê∫ÄË∂≥Â∫¶„ÇíË¶ñË¶öÁöÑ„Å´Ë°®Á§∫</p>
              </div>
            </div>
            <div className="flex items-start space-x-3">
              <Users className="h-5 w-5 text-primary mt-0.5" />
              <div>
                <h4 className="font-medium">Âü∫Êú¨Áµ±Ë®à</h4>
                <p className="text-sm text-muted-foreground">ÂõûÁ≠îËÄÖÊï∞„ÄÅÂèÇÂä†Áéá„ÄÅÊ∫ÄË∂≥Â∫¶„Çπ„Ç≥„Ç¢„Å™„Å©„ÅÆÁµ±Ë®àÊÉÖÂ†±</p>
              </div>
            </div>
            <div className="flex items-start space-x-3">
              <TrendingUp className="h-5 w-5 text-primary mt-0.5" />
              <div>
                <h4 className="font-medium">„Éï„Ç£„É´„ÇøÊ©üËÉΩ</h4>
                <p className="text-sm text-muted-foreground">Ê∫ÄË∂≥Â∫¶È†ÖÁõÆÂà•„ÅÆÁµû„ÇäËæº„Åø„Å®Ê§úÁ¥¢Ê©üËÉΩ</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* ‰Ωø„ÅÑÊñπ„Ç¨„Ç§„Éâ */}
      <Card>
        <CardHeader>
          <CardTitle>‰Ωø„ÅÑÊñπ„Ç¨„Ç§„Éâ</CardTitle>
          <CardDescription>3„Å§„ÅÆÁ∞°Âçò„Å™„Çπ„ÉÜ„ÉÉ„Éó„Åß„Ç¢„É≥„Ç±„Éº„ÉàÁµêÊûú„ÇíÂàÜÊûê„Åß„Åç„Åæ„Åô</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid gap-6 md:grid-cols-3">
            <div className="text-center space-y-2">
              <div className="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                <span className="text-xl font-bold text-primary">1</span>
              </div>
              <h4 className="font-medium">Excel„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ</h4>
              <p className="text-sm text-muted-foreground">
                Google„Éï„Ç©„Éº„É†„Åã„Çâ„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åó„ÅüExcel„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
              </p>
            </div>
            <div className="text-center space-y-2">
              <div className="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                <span className="text-xl font-bold text-primary">2</span>
              </div>
              <h4 className="font-medium">ÂàÜÊûê„Éö„Éº„Ç∏„ÅßÁ¢∫Ë™ç</h4>
              <p className="text-sm text-muted-foreground">ÂæìÊ•≠Âì°Ê∫ÄË∂≥Â∫¶„ÇíË¶ñË¶öÁöÑ„Å´ÂàÜÊûê</p>
            </div>
            <div className="text-center space-y-2">
              <div className="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mx-auto">
                <span className="text-xl font-bold text-primary">3</span>
              </div>
              <h4 className="font-medium">„Éá„Éº„Çø„Ç®„ÇØ„Çπ„Éù„Éº„Éà</h4>
              <p className="text-sm text-muted-foreground">ÂàÜÊûêÁµêÊûú„ÇíExcel„ÇÑPDF„Åß„Ç®„ÇØ„Çπ„Éù„Éº„Éà</p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

export default function Page() {
  return (
    <RequireAuth>
      <HomePage />
    </RequireAuth>
  )
}
